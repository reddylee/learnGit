---
title: "Git tutorial"
format: html
editor: visual
---

## Setup
```{r setup}
library(tidyverse)
library(MASS)
library(matlib)
library(expm)
```


## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
A <- matrix(c(-3,-2,1,0),2)
A
```
```{r}
eigen(A)
fractions(eigen(A)[[2]])
```
```{r}
B <- c(1,2)
A%*%B
```
```{r}
(-0.707)^2
(-0.4472136)^2
(-0.8944272)^2
```
```{r}
A <- matrix(c(1,4,1,1),2)
A
eigen(A)
solve(A)
```

```{r}
B <- matrix(c(-2,4,1,-2),2)
B
C <- matrix(c(2,4,1,2),2)
C
solve(B)
solve(C)
```
```{r}

a <- matrix(c(3,0,0,-1),2)
a
A%*%eigen(A)[[2]] #AP
eigen(A)[[2]]%*%a
```
```{r}
A <- matrix(c(1,1,1,0),2)
A

eigen(A)
```

```{r}
(-1+sqrt(5))/2
```

```{r}
x <- seq(-10, 20, by = 0.1)  # Adjust the range and increment as needed
y <- ((-1+sqrt(5))/2) * x
data <- data.frame(x = x, y = y)
ggplot(data, aes(x = x, y = y)) +
  geom_line(color = "blue") +
  labs(title = "Plot of y = 0.6180333x", x = "x", y = "y")

```
```{r}
fb <- 970
fb*(-1+sqrt(5))/2
fb*(1+sqrt(5))/2
```

```{r}
A <- matrix(c(0.8,0.2,0.1,0.9),2)
A 
eigen(A)
```
```{r}
eigen(A)[[1]]%*%eigen(A)[[2]]
```
```{r}
A <- matrix(c(3,0,1,2),2)
A
eigen(A)
```
```{r}
A <- matrix(c(-1,0,0,2),2)
A
eigen(A)
```
```{r}
B <- matrix(c(-5,0,0,0,
              0,-2,0,0,
              0,0,-4,0,
              0,0,0,4),4)
B
eigen(B)
```
```{r}
C <- matrix(c(1,0,0,0,
              0,2,0,0,
              0,0,3,0,
              0,0,0,4),4)
C
eigen(C)
```
```{r}
D <- matrix(c(3,1,4,1),2)
D^100
```
```{r}
D <- matrix(c(3,0,1,2),2)
D^100
eigen(D)
E <- matrix(eigen(D)[[2]],2)
E
solve(E)%*%D%*%E
```
```{r}
V <- matrix(c(2,1+sqrt(5),2,1-sqrt(5)),2)
V
eigen(V)
```
```{r}
X <- matrix(c(0,1,1,1),2)
X
mpower(X,1000)
X%^%1000
```
```{r}
A <- matrix(c(3,0,1,2),2)
A
a <- eigen(A)[[1]]
P <- eigen(A)[[2]]
a
P
class(P)
G <- matrix(c(3,0,0,2),2)
G
P%*%G%*%t(P)
```
```{r}
A <- matrix(c(-1,2,-4,3),2)
A
exp(A)
```

```{r}
A <- matrix(c(5,3,1,6,2,4,5,0,1),3)
A
B <- matrix(c(1,0,0,0,2,0,0,0,3),3)
B
A%*%B
```

```{r}
solve(B)
B%^%2
mpower(B,2)
```
```{r}
a <- solve(A)
P <- eigen(A)[[2]]
```

```{r}
A <- matrix(c(2,1,1,2),2)
A
a <- eigen(A)[[1]]
P <- eigen(A)[[2]]
a
P
solve(P)
t(P)
class(P)
G <- matrix(c(a[1],0,0,a[2]),2)
G
P%*%G%*%t(P)
```

```{r}
A <- matrix(c(5,0,0,2,3,0,3,4,9),3)
A
eigen(A)
1/sqrt(2)
```
```{r}
A <- matrix(c(0,pi,-pi,0),2)
A

mpower(A,10)
A%^%10
```
```{r}
A <- matrix(c(1,0,sqrt(2),1,0,-sqrt(2)),3)
A
E <- t(A)%*%A
E
solve(E)
eigen(E)
1/sqrt(2)
```
```{r}
svd(A)
SVD(A)
```
```{r}
SVD(A)
```
```{r}
svdDemo(A)
```
```{r}
A <- matrix(c(1,2,6,2,3,9,6,9,7),3)
A

solve(A)

eigen(A)

svd(A)
```
```{r}
O <- eigen(A)[[2]]
O
solve(O)
```
```{r}
O2 <- O*O
```
```{r}
rowSums(O2)
colSums(O2)
```
```{r}
?matlib
```

```{r}
A <- matrix(c(1,4,8,2,4,9),2)
#A <- matrix(c(3,2,2,3,2,-2),2)
#A <- matrix(c(1,3,4,2,3,7,8,3,5),3)
A
AT <- A%*%t(A)
AT
TA <- t(A)%*%A
TA
E1 <- eigen(AT)
E2 <- eigen(TA)
E1
E2
```
```{r}
LMD <- matrix(c(sqrt(E1[[1]][1]),0,0,sqrt(E1[[1]][2])),2)
LMD
```
```{r}
E1[[2]]%*%LMD%*%t(E2[[2]][,1:2])
A
svd(A)
```
```{r}
E1[[2]]
E2[[2]][,1:2]
```


```{r}
E1[[2]]
LMD
t(E2[[2]])
```
```{r}
B <- c(0.6419538, -0.7667433, 0.7667433,0.6419538)
B^2
```
```{r}
A
SVD(A)
svd <- svd(A)
```
```{r}
D <- matrix(c(svd$d[1],0,0,svd$d[2],0,0),2)
D
svd$u%*%D%*%svd$v
```
```{r}
A <- matrix(c(1,4,8,2,4,9),2)
B <- matrix(c(3,2,2,3,2,-2),2)
A
B
svd(A)
SVD(A)
svd(B)
SVD(B)
```
```{r}
C <- matrix(c(1,3,4,2,3,7,8,3,5),3)
C
svd(C)
SVD(C)
```
```{r}
A <- matrix(c(2,4,8,3,9,1),2)
A

s <- svd(A)
s
d <- matrix(c(s$d[1],0,0,s$d[2]),2)
d
```
```{r}
s$u%*%d%*%t(s$v)
s$v%*%d%*%t(s$u)

```
```{r}
eigen(A%*%t(A))
eigen(t(A)%*%A)
```
```{r}
A <- matrix(c(3,5,9,4,0,1,2,8,6,7,3,1),3)
A
AT <- A%*%t(A)
TA <- t(A)%*%A
AT
TA
EAT <- eigen(AT)
ETA <- eigen(TA)
```
```{r}
D <- matrix(c(EAT$values[1],0,0,0,EAT$values[2],0,0,0,EAT$values[3]),3)
D
EAT
ETA
```
```{r}
AT
EAT$vectors%*%D%*%t(EAT$vectors)
```
```{r}
TD <- matrix(c(ETA$values[1],0,0,0,0,ETA$values[2],0,0,0,0,ETA$values[3],0,0,0,0,ETA$values[4]),4)
TD
EAT
ETA
```

```{r}
TA
ETA$vectors%*%TD%*%t(ETA$vectors)
```

```{r}
A
SA <- svd(A)
SA
DA <- matrix(c(SA$d[1],0,0,0,SA$d[2],0,0,0,SA$d[3]),3)
DA
```
```{r}
A
SA$u%*%DA%*%t(SA$v)
```
```{r}
a <- matrix(c(2,0,0,sqrt(2)),2)
a
solve(a)

```

```{r}
#A <- matrix(c(3,4,0,5),2)
#A <- matrix(c(1.8,4.4,1.2,4.6),2)
A <- matrix(c(1.5,4.5,3,9),2)
#A <- matrix(c(0,8,3,1),2)
A
svd(A)
```
```{r}
# A <- matrix(c(3,5,5,9,
#               1,9,3,7,
#               4,2,5,9,
#               1,6,8,3),4)

A <- matrix(c(3,5,5,9,
              1,9,3,7,
              4,2,5,9,
              1,6,8,3,
              3,6,1,8,
              9,3,2,7),4)

A
SA <- svd(A)
SA
```
```{r}
A
SA$d[1]*SA$u[,1]%*%t(SA$v[,1])+SA$d[2]*SA$u[,2]%*%t(SA$v[,2])+SA$d[3]*SA$u[,3]%*%t(SA$v[,3])+SA$d[4]*SA$u[,4]%*%t(SA$v[,4])
```
```{r}
A <- matrix(c(9,4,
              4,3),2,byrow = T)
A

eigen(A) 
```
```{r}
A <- matrix(c(3,1,-1,1),2)
A
eigen(A)
```

